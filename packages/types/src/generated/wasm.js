
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  name: 'name',
  brandConfig: 'brandConfig',
  domain: 'domain',
  subdomain: 'subdomain',
  plan: 'plan',
  maxUsers: 'maxUsers',
  maxJobs: 'maxJobs',
  isActive: 'isActive',
  trialEndsAt: 'trialEndsAt',
  contactEmail: 'contactEmail',
  billingEmail: 'billingEmail',
  contactPhone: 'contactPhone',
  billingAddress: 'billingAddress',
  features: 'features',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  firstName: 'firstName',
  lastName: 'lastName',
  password: 'password',
  role: 'role',
  companyId: 'companyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastLogin: 'lastLogin',
  isActive: 'isActive',
  organizationId: 'organizationId'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  website: 'website',
  logo: 'logo',
  email: 'email',
  phone: 'phone',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.CandidateScalarFieldEnum = {
  id: 'id',
  email: 'email',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  linkedin: 'linkedin',
  github: 'github',
  portfolio: 'portfolio',
  resume: 'resume',
  summary: 'summary',
  resumeUrl: 'resumeUrl',
  status: 'status',
  location: 'location',
  timezone: 'timezone',
  yearsOfExperience: 'yearsOfExperience',
  currentSalary: 'currentSalary',
  expectedSalary: 'expectedSalary',
  availability: 'availability',
  source: 'source',
  notes: 'notes',
  tags: 'tags',
  companyId: 'companyId',
  addedById: 'addedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId',
  certifications: 'certifications',
  currentRole: 'currentRole',
  education: 'education',
  experience: 'experience',
  industryExperience: 'industryExperience',
  projects: 'projects',
  salaryExpectation: 'salaryExpectation',
  skills: 'skills',
  embedding: 'embedding',
  embeddingAt: 'embeddingAt',
  embeddingModel: 'embeddingModel'
};

exports.Prisma.JobScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  requirements: 'requirements',
  department: 'department',
  location: 'location',
  remote: 'remote',
  type: 'type',
  level: 'level',
  salaryMin: 'salaryMin',
  salaryMax: 'salaryMax',
  currency: 'currency',
  status: 'status',
  priority: 'priority',
  startDate: 'startDate',
  endDate: 'endDate',
  deadline: 'deadline',
  companyId: 'companyId',
  recruiterId: 'recruiterId',
  jobDescriptionUrl: 'jobDescriptionUrl',
  aiGenerated: 'aiGenerated',
  aiPrompt: 'aiPrompt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId',
  applicationInfo: 'applicationInfo',
  benefits: 'benefits',
  metadata: 'metadata',
  requirementsDetailed: 'requirementsDetailed',
  responsibilities: 'responsibilities',
  jobInfo: 'jobInfo',
  embedding: 'embedding',
  embeddingAt: 'embeddingAt',
  embeddingModel: 'embeddingModel'
};

exports.Prisma.JobApplicationScalarFieldEnum = {
  id: 'id',
  status: 'status',
  appliedAt: 'appliedAt',
  coverLetter: 'coverLetter',
  notes: 'notes',
  rating: 'rating',
  fitScore: 'fitScore',
  candidateId: 'candidateId',
  jobId: 'jobId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchingResultScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  candidateId: 'candidateId',
  score: 'score',
  embeddingSimilarity: 'embeddingSimilarity',
  skillMatches: 'skillMatches',
  aiAnalysis: 'aiAnalysis',
  calculatedAt: 'calculatedAt',
  expiresAt: 'expiresAt',
  organizationId: 'organizationId'
};

exports.Prisma.InterviewScalarFieldEnum = {
  id: 'id',
  title: 'title',
  type: 'type',
  status: 'status',
  scheduledAt: 'scheduledAt',
  duration: 'duration',
  timezone: 'timezone',
  location: 'location',
  notes: 'notes',
  feedback: 'feedback',
  rating: 'rating',
  outcome: 'outcome',
  candidateId: 'candidateId',
  jobId: 'jobId',
  applicationId: 'applicationId',
  interviewerId: 'interviewerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ActivityScalarFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  description: 'description',
  metadata: 'metadata',
  userId: 'userId',
  candidateId: 'candidateId',
  jobId: 'jobId',
  applicationId: 'applicationId',
  createdAt: 'createdAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  stripeSubscriptionId: 'stripeSubscriptionId',
  stripeCustomerId: 'stripeCustomerId',
  stripePriceId: 'stripePriceId',
  status: 'status',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  cancelAtPeriodEnd: 'cancelAtPeriodEnd',
  canceledAt: 'canceledAt',
  trialStart: 'trialStart',
  trialEnd: 'trialEnd',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  stripePaymentIntentId: 'stripePaymentIntentId',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  description: 'description',
  metadata: 'metadata',
  subscriptionId: 'subscriptionId',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  stripeInvoiceId: 'stripeInvoiceId',
  subscriptionId: 'subscriptionId',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  invoicePdf: 'invoicePdf',
  hostedInvoiceUrl: 'hostedInvoiceUrl',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  dueDate: 'dueDate',
  paidAt: 'paidAt',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.SubscriptionPlan = exports.$Enums.SubscriptionPlan = {
  FREE: 'FREE',
  STARTER: 'STARTER',
  PROFESSIONAL: 'PROFESSIONAL',
  ENTERPRISE: 'ENTERPRISE',
  CUSTOM: 'CUSTOM'
};

exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  RECRUITER: 'RECRUITER',
  HIRING_MANAGER: 'HIRING_MANAGER',
  INTERVIEWER: 'INTERVIEWER'
};

exports.CandidateStatus = exports.$Enums.CandidateStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  HIRED: 'HIRED',
  REJECTED: 'REJECTED',
  BLACKLISTED: 'BLACKLISTED'
};

exports.JobType = exports.$Enums.JobType = {
  FULL_TIME: 'FULL_TIME',
  PART_TIME: 'PART_TIME',
  CONTRACT: 'CONTRACT',
  FREELANCE: 'FREELANCE',
  INTERNSHIP: 'INTERNSHIP'
};

exports.JobLevel = exports.$Enums.JobLevel = {
  ENTRY: 'ENTRY',
  JUNIOR: 'JUNIOR',
  MID: 'MID',
  SENIOR: 'SENIOR',
  LEAD: 'LEAD',
  PRINCIPAL: 'PRINCIPAL',
  EXECUTIVE: 'EXECUTIVE'
};

exports.JobStatus = exports.$Enums.JobStatus = {
  DRAFT: 'DRAFT',
  ACTIVE: 'ACTIVE',
  PAUSED: 'PAUSED',
  CLOSED: 'CLOSED',
  CANCELLED: 'CANCELLED'
};

exports.Priority = exports.$Enums.Priority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.ApplicationStatus = exports.$Enums.ApplicationStatus = {
  APPLIED: 'APPLIED',
  REVIEWING: 'REVIEWING',
  PHONE_SCREEN: 'PHONE_SCREEN',
  INTERVIEW: 'INTERVIEW',
  TECHNICAL_TEST: 'TECHNICAL_TEST',
  FINAL_INTERVIEW: 'FINAL_INTERVIEW',
  REFERENCE_CHECK: 'REFERENCE_CHECK',
  OFFER_MADE: 'OFFER_MADE',
  OFFER_ACCEPTED: 'OFFER_ACCEPTED',
  OFFER_REJECTED: 'OFFER_REJECTED',
  REJECTED: 'REJECTED',
  WITHDRAWN: 'WITHDRAWN'
};

exports.InterviewType = exports.$Enums.InterviewType = {
  PHONE: 'PHONE',
  VIDEO: 'VIDEO',
  IN_PERSON: 'IN_PERSON',
  TECHNICAL: 'TECHNICAL',
  BEHAVIORAL: 'BEHAVIORAL',
  CULTURAL_FIT: 'CULTURAL_FIT'
};

exports.InterviewStatus = exports.$Enums.InterviewStatus = {
  SCHEDULED: 'SCHEDULED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  RESCHEDULED: 'RESCHEDULED'
};

exports.InterviewOutcome = exports.$Enums.InterviewOutcome = {
  PASS: 'PASS',
  FAIL: 'FAIL',
  MAYBE: 'MAYBE',
  NO_SHOW: 'NO_SHOW'
};

exports.ActivityType = exports.$Enums.ActivityType = {
  CANDIDATE_ADDED: 'CANDIDATE_ADDED',
  CANDIDATE_UPDATED: 'CANDIDATE_UPDATED',
  JOB_CREATED: 'JOB_CREATED',
  JOB_UPDATED: 'JOB_UPDATED',
  APPLICATION_SUBMITTED: 'APPLICATION_SUBMITTED',
  APPLICATION_STATUS_CHANGED: 'APPLICATION_STATUS_CHANGED',
  INTERVIEW_SCHEDULED: 'INTERVIEW_SCHEDULED',
  INTERVIEW_COMPLETED: 'INTERVIEW_COMPLETED',
  NOTE_ADDED: 'NOTE_ADDED',
  EMAIL_SENT: 'EMAIL_SENT',
  CALL_MADE: 'CALL_MADE',
  AI_MATCH_FOUND: 'AI_MATCH_FOUND',
  ORGANIZATION_CREATED: 'ORGANIZATION_CREATED',
  USER_INVITED: 'USER_INVITED',
  BATCH_UPLOAD_STARTED: 'BATCH_UPLOAD_STARTED',
  BATCH_UPLOAD_COMPLETED: 'BATCH_UPLOAD_COMPLETED',
  BATCH_UPLOAD_FAILED: 'BATCH_UPLOAD_FAILED'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  ACTIVE: 'ACTIVE',
  PAST_DUE: 'PAST_DUE',
  CANCELED: 'CANCELED',
  UNPAID: 'UNPAID',
  TRIALING: 'TRIALING',
  INCOMPLETE: 'INCOMPLETE',
  INCOMPLETE_EXPIRED: 'INCOMPLETE_EXPIRED'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  SUCCEEDED: 'SUCCEEDED',
  FAILED: 'FAILED',
  CANCELED: 'CANCELED',
  REFUNDED: 'REFUNDED'
};

exports.Prisma.ModelName = {
  Organization: 'Organization',
  User: 'User',
  Company: 'Company',
  Candidate: 'Candidate',
  Job: 'Job',
  JobApplication: 'JobApplication',
  MatchingResult: 'MatchingResult',
  Interview: 'Interview',
  Activity: 'Activity',
  Subscription: 'Subscription',
  Payment: 'Payment',
  Invoice: 'Invoice'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "types",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/matthieuhahn/dev/perso/talent/packages/types/src/generated",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/matthieuhahn/dev/perso/talent/apps/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../apps/backend/.env"
  },
  "relativePath": "../../../../apps/backend/prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ngenerator types {\n  provider = \"prisma-client-js\"\n  output   = \"../../../packages/types/src/generated\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Organization {\n  id              String           @id @default(cuid())\n  slug            String           @unique\n  name            String\n  brandConfig     Json?\n  domain          String?\n  subdomain       String?\n  plan            SubscriptionPlan @default(STARTER)\n  maxUsers        Int              @default(5)\n  maxJobs         Int              @default(50)\n  isActive        Boolean          @default(true)\n  trialEndsAt     DateTime?\n  contactEmail    String\n  billingEmail    String?\n  contactPhone    String?\n  billingAddress  Json?\n  features        Json             @default(\"{\\\"apiAccess\\\": false, \\\"aiAssisted\\\": true, \\\"customBranding\\\": false}\")\n  createdAt       DateTime         @default(now())\n  updatedAt       DateTime         @updatedAt\n  candidates      Candidate[]\n  companies       Company[]\n  jobs            Job[]\n  matchingResults MatchingResult[]\n  users           User[]\n  subscription    Subscription?\n  payments        Payment[]\n  invoices        Invoice[]\n\n  @@map(\"organizations\")\n}\n\nmodel User {\n  id                  String       @id @default(cuid())\n  email               String       @unique\n  firstName           String\n  lastName            String\n  password            String\n  role                UserRole     @default(RECRUITER)\n  companyId           String?\n  createdAt           DateTime     @default(now())\n  updatedAt           DateTime     @updatedAt\n  lastLogin           DateTime?\n  isActive            Boolean      @default(true)\n  organizationId      String\n  activities          Activity[]\n  candidates          Candidate[]\n  conductedInterviews Interview[]  @relation(\"InterviewerToInterview\")\n  jobs                Job[]\n  company             Company?     @relation(fields: [companyId], references: [id])\n  organization        Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@map(\"users\")\n}\n\nmodel Company {\n  id             String       @id @default(cuid())\n  name           String\n  description    String?\n  website        String?\n  logo           String?\n  email          String?\n  phone          String?\n  address        String?\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n  organizationId String\n  candidates     Candidate[]\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  jobs           Job[]\n  users          User[]\n\n  @@map(\"companies\")\n}\n\nmodel Candidate {\n  id                 String           @id @default(cuid())\n  email              String\n  firstName          String\n  lastName           String\n  phone              String?\n  linkedin           String?\n  github             String?\n  portfolio          String?\n  resume             String?\n  summary            String?\n  resumeUrl          String?\n  status             CandidateStatus  @default(ACTIVE)\n  location           String?\n  timezone           String?\n  yearsOfExperience  Int?\n  currentSalary      Float?\n  expectedSalary     Float?\n  availability       DateTime?\n  source             String?\n  notes              String?\n  tags               String[]\n  companyId          String?\n  addedById          String\n  createdAt          DateTime         @default(now())\n  updatedAt          DateTime         @updatedAt\n  organizationId     String\n  certifications     Json?\n  currentRole        String?\n  education          Json?\n  experience         Json?\n  industryExperience String[]\n  projects           Json?\n  salaryExpectation  Json?\n  skills             Json?\n  embedding          String?\n  embeddingAt        DateTime?\n  embeddingModel     String?\n  activities         Activity[]\n  addedBy            User             @relation(fields: [addedById], references: [id])\n  company            Company?         @relation(fields: [companyId], references: [id])\n  organization       Organization     @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  interviews         Interview[]\n  applications       JobApplication[]\n  matchingResults    MatchingResult[]\n\n  @@unique([email, organizationId])\n  @@map(\"candidates\")\n}\n\nmodel Job {\n  id                   String           @id @default(cuid())\n  title                String\n  description          String\n  requirements         String?\n  department           String?\n  location             String?\n  remote               Boolean          @default(false)\n  type                 JobType          @default(FULL_TIME)\n  level                JobLevel         @default(MID)\n  salaryMin            Float?\n  salaryMax            Float?\n  currency             String           @default(\"USD\")\n  status               JobStatus        @default(DRAFT)\n  priority             Priority         @default(MEDIUM)\n  startDate            DateTime?\n  endDate              DateTime?\n  deadline             DateTime?\n  companyId            String\n  recruiterId          String\n  jobDescriptionUrl    String?\n  aiGenerated          Boolean          @default(false)\n  aiPrompt             String?\n  createdAt            DateTime         @default(now())\n  updatedAt            DateTime         @updatedAt\n  organizationId       String\n  applicationInfo      Json?\n  benefits             Json?\n  metadata             Json?\n  requirementsDetailed Json?\n  responsibilities     Json?\n  jobInfo              Json?\n  embedding            String?\n  embeddingAt          DateTime?\n  embeddingModel       String?\n  activities           Activity[]\n  interviews           Interview[]\n  applications         JobApplication[]\n  company              Company          @relation(fields: [companyId], references: [id])\n  organization         Organization     @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  recruiter            User             @relation(fields: [recruiterId], references: [id])\n  matchingResults      MatchingResult[]\n\n  @@map(\"jobs\")\n}\n\nmodel JobApplication {\n  id          String            @id @default(cuid())\n  status      ApplicationStatus @default(APPLIED)\n  appliedAt   DateTime          @default(now())\n  coverLetter String?\n  notes       String?\n  rating      Float?\n  fitScore    Float?\n  candidateId String\n  jobId       String\n  createdAt   DateTime          @default(now())\n  updatedAt   DateTime          @updatedAt\n  activities  Activity[]\n  interviews  Interview[]\n  candidate   Candidate         @relation(fields: [candidateId], references: [id])\n  job         Job               @relation(fields: [jobId], references: [id])\n\n  @@unique([candidateId, jobId])\n  @@map(\"job_applications\")\n}\n\nmodel MatchingResult {\n  id                  String       @id @default(cuid())\n  jobId               String\n  candidateId         String\n  score               Float\n  embeddingSimilarity Float\n  skillMatches        Json\n  aiAnalysis          Json?\n  calculatedAt        DateTime     @default(now())\n  expiresAt           DateTime\n  organizationId      String\n  candidate           Candidate    @relation(fields: [candidateId], references: [id])\n  job                 Job          @relation(fields: [jobId], references: [id])\n  organization        Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@unique([jobId, candidateId])\n  @@map(\"matching_results\")\n}\n\nmodel Interview {\n  id            String            @id @default(cuid())\n  title         String\n  type          InterviewType     @default(PHONE)\n  status        InterviewStatus   @default(SCHEDULED)\n  scheduledAt   DateTime\n  duration      Int               @default(60)\n  timezone      String?\n  location      String?\n  notes         String?\n  feedback      String?\n  rating        Float?\n  outcome       InterviewOutcome?\n  candidateId   String\n  jobId         String\n  applicationId String?\n  interviewerId String\n  createdAt     DateTime          @default(now())\n  updatedAt     DateTime          @updatedAt\n  application   JobApplication?   @relation(fields: [applicationId], references: [id])\n  candidate     Candidate         @relation(fields: [candidateId], references: [id])\n  interviewer   User              @relation(\"InterviewerToInterview\", fields: [interviewerId], references: [id])\n  job           Job               @relation(fields: [jobId], references: [id])\n\n  @@map(\"interviews\")\n}\n\nmodel Activity {\n  id            String          @id @default(cuid())\n  type          ActivityType\n  title         String\n  description   String?\n  metadata      Json?\n  userId        String?\n  candidateId   String?\n  jobId         String?\n  applicationId String?\n  createdAt     DateTime        @default(now())\n  application   JobApplication? @relation(fields: [applicationId], references: [id])\n  candidate     Candidate?      @relation(fields: [candidateId], references: [id])\n  job           Job?            @relation(fields: [jobId], references: [id])\n  user          User?           @relation(fields: [userId], references: [id])\n\n  @@map(\"activities\")\n}\n\nenum SubscriptionPlan {\n  FREE\n  STARTER\n  PROFESSIONAL\n  ENTERPRISE\n  CUSTOM\n}\n\nenum UserRole {\n  ADMIN\n  RECRUITER\n  HIRING_MANAGER\n  INTERVIEWER\n}\n\nenum CandidateStatus {\n  ACTIVE\n  INACTIVE\n  HIRED\n  REJECTED\n  BLACKLISTED\n}\n\nenum JobType {\n  FULL_TIME\n  PART_TIME\n  CONTRACT\n  FREELANCE\n  INTERNSHIP\n}\n\nenum JobLevel {\n  ENTRY\n  JUNIOR\n  MID\n  SENIOR\n  LEAD\n  PRINCIPAL\n  EXECUTIVE\n}\n\nenum JobStatus {\n  DRAFT\n  ACTIVE\n  PAUSED\n  CLOSED\n  CANCELLED\n}\n\nenum Priority {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nenum ApplicationStatus {\n  APPLIED\n  REVIEWING\n  PHONE_SCREEN\n  INTERVIEW\n  TECHNICAL_TEST\n  FINAL_INTERVIEW\n  REFERENCE_CHECK\n  OFFER_MADE\n  OFFER_ACCEPTED\n  OFFER_REJECTED\n  REJECTED\n  WITHDRAWN\n}\n\nenum InterviewType {\n  PHONE\n  VIDEO\n  IN_PERSON\n  TECHNICAL\n  BEHAVIORAL\n  CULTURAL_FIT\n}\n\nenum InterviewStatus {\n  SCHEDULED\n  IN_PROGRESS\n  COMPLETED\n  CANCELLED\n  RESCHEDULED\n}\n\nenum InterviewOutcome {\n  PASS\n  FAIL\n  MAYBE\n  NO_SHOW\n}\n\nenum ActivityType {\n  CANDIDATE_ADDED\n  CANDIDATE_UPDATED\n  JOB_CREATED\n  JOB_UPDATED\n  APPLICATION_SUBMITTED\n  APPLICATION_STATUS_CHANGED\n  INTERVIEW_SCHEDULED\n  INTERVIEW_COMPLETED\n  NOTE_ADDED\n  EMAIL_SENT\n  CALL_MADE\n  AI_MATCH_FOUND\n  ORGANIZATION_CREATED\n  USER_INVITED\n  BATCH_UPLOAD_STARTED\n  BATCH_UPLOAD_COMPLETED\n  BATCH_UPLOAD_FAILED\n}\n\nenum SubscriptionStatus {\n  ACTIVE\n  PAST_DUE\n  CANCELED\n  UNPAID\n  TRIALING\n  INCOMPLETE\n  INCOMPLETE_EXPIRED\n}\n\nenum PaymentStatus {\n  PENDING\n  SUCCEEDED\n  FAILED\n  CANCELED\n  REFUNDED\n}\n\nmodel Subscription {\n  id                   String             @id @default(cuid())\n  stripeSubscriptionId String             @unique\n  stripeCustomerId     String\n  stripePriceId        String\n  status               SubscriptionStatus\n  currentPeriodStart   DateTime\n  currentPeriodEnd     DateTime\n  cancelAtPeriodEnd    Boolean            @default(false)\n  canceledAt           DateTime?\n  trialStart           DateTime?\n  trialEnd             DateTime?\n  organizationId       String             @unique\n  createdAt            DateTime           @default(now())\n  updatedAt            DateTime           @updatedAt\n  organization         Organization       @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  payments             Payment[]\n  invoices             Invoice[]\n\n  @@map(\"subscriptions\")\n}\n\nmodel Payment {\n  id                    String        @id @default(cuid())\n  stripePaymentIntentId String        @unique\n  amount                Int // Amount in cents\n  currency              String        @default(\"usd\")\n  status                PaymentStatus\n  description           String?\n  metadata              Json?\n  subscriptionId        String?\n  organizationId        String\n  createdAt             DateTime      @default(now())\n  updatedAt             DateTime      @updatedAt\n  subscription          Subscription? @relation(fields: [subscriptionId], references: [id])\n  organization          Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@map(\"payments\")\n}\n\nmodel Invoice {\n  id               String       @id @default(cuid())\n  stripeInvoiceId  String       @unique\n  subscriptionId   String\n  amount           Int // Amount in cents\n  currency         String       @default(\"usd\")\n  status           String\n  invoicePdf       String?\n  hostedInvoiceUrl String?\n  periodStart      DateTime\n  periodEnd        DateTime\n  dueDate          DateTime?\n  paidAt           DateTime?\n  organizationId   String\n  createdAt        DateTime     @default(now())\n  updatedAt        DateTime     @updatedAt\n  subscription     Subscription @relation(fields: [subscriptionId], references: [id])\n  organization     Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@map(\"invoices\")\n}\n",
  "inlineSchemaHash": "8d2f090338ba4be83871c07d5344a4770516d797a0ac5305b3bad580439af991",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brandConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"domain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subdomain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"enum\",\"type\":\"SubscriptionPlan\"},{\"name\":\"maxUsers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxJobs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"trialEndsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contactEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"billingEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"billingAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"candidates\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToOrganization\"},{\"name\":\"companies\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToOrganization\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToOrganization\"},{\"name\":\"matchingResults\",\"kind\":\"object\",\"type\":\"MatchingResult\",\"relationName\":\"MatchingResultToOrganization\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizationToUser\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"OrganizationToSubscription\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"OrganizationToPayment\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToOrganization\"}],\"dbName\":\"organizations\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"Activity\",\"relationName\":\"ActivityToUser\"},{\"name\":\"candidates\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToUser\"},{\"name\":\"conductedInterviews\",\"kind\":\"object\",\"type\":\"Interview\",\"relationName\":\"InterviewerToInterview\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToUser\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToUser\"}],\"dbName\":\"users\"},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"candidates\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToCompany\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CompanyToOrganization\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"CompanyToJob\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"}],\"dbName\":\"companies\"},\"Candidate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"github\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"portfolio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resume\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resumeUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"CandidateStatus\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsOfExperience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentSalary\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"expectedSalary\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"availability\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certifications\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"currentRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"education\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"experience\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"industryExperience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projects\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"salaryExpectation\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"embedding\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"embeddingAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"embeddingModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"Activity\",\"relationName\":\"ActivityToCandidate\"},{\"name\":\"addedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CandidateToUser\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CandidateToCompany\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CandidateToOrganization\"},{\"name\":\"interviews\",\"kind\":\"object\",\"type\":\"Interview\",\"relationName\":\"CandidateToInterview\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"JobApplication\",\"relationName\":\"CandidateToJobApplication\"},{\"name\":\"matchingResults\",\"kind\":\"object\",\"type\":\"MatchingResult\",\"relationName\":\"CandidateToMatchingResult\"}],\"dbName\":\"candidates\"},\"Job\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requirements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remote\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"JobType\"},{\"name\":\"level\",\"kind\":\"enum\",\"type\":\"JobLevel\"},{\"name\":\"salaryMin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"salaryMax\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"JobStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"Priority\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recruiterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobDescriptionUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiGenerated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"aiPrompt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicationInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"requirementsDetailed\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"responsibilities\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"jobInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"embedding\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"embeddingAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"embeddingModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"Activity\",\"relationName\":\"ActivityToJob\"},{\"name\":\"interviews\",\"kind\":\"object\",\"type\":\"Interview\",\"relationName\":\"InterviewToJob\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"JobApplication\",\"relationName\":\"JobToJobApplication\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToJob\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"JobToOrganization\"},{\"name\":\"recruiter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"JobToUser\"},{\"name\":\"matchingResults\",\"kind\":\"object\",\"type\":\"MatchingResult\",\"relationName\":\"JobToMatchingResult\"}],\"dbName\":\"jobs\"},\"JobApplication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApplicationStatus\"},{\"name\":\"appliedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"coverLetter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fitScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"candidateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"Activity\",\"relationName\":\"ActivityToJobApplication\"},{\"name\":\"interviews\",\"kind\":\"object\",\"type\":\"Interview\",\"relationName\":\"InterviewToJobApplication\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToJobApplication\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToJobApplication\"}],\"dbName\":\"job_applications\"},\"MatchingResult\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"candidateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"embeddingSimilarity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"skillMatches\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"aiAnalysis\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"calculatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToMatchingResult\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToMatchingResult\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"MatchingResultToOrganization\"}],\"dbName\":\"matching_results\"},\"Interview\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"InterviewType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InterviewStatus\"},{\"name\":\"scheduledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"outcome\",\"kind\":\"enum\",\"type\":\"InterviewOutcome\"},{\"name\":\"candidateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"interviewerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"JobApplication\",\"relationName\":\"InterviewToJobApplication\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToInterview\"},{\"name\":\"interviewer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InterviewerToInterview\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"InterviewToJob\"}],\"dbName\":\"interviews\"},\"Activity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ActivityType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"candidateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"JobApplication\",\"relationName\":\"ActivityToJobApplication\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"ActivityToCandidate\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"ActivityToJob\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ActivityToUser\"}],\"dbName\":\"activities\"},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePriceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"currentPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelAtPeriodEnd\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canceledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trialStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trialEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSubscription\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToSubscription\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToSubscription\"}],\"dbName\":\"subscriptions\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePaymentIntentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"PaymentToSubscription\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToPayment\"}],\"dbName\":\"payments\"},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeInvoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoicePdf\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hostedInvoiceUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"InvoiceToSubscription\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InvoiceToOrganization\"}],\"dbName\":\"invoices\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

